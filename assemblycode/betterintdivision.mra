* PERFORM INTEGER DIVISION
* RETURN THE QUOTIENT FIRST, REMAINDER SECOND
* RETURNS ZERO ON DIVIDE BY ZERO 
#BEGIN   CLEAR     000
*
#INP1    INPUT     000
         STORE     #DIVIS
         INPUT     000
         STORE     #DIVDND
*
* TEST DIVISOR FOR NEGATIVE OR ZERO
*
#TEST1   LOAD      #DIVIS
         SKIPCOND  800
         JUMP      #TOPNPOS
         JUMP      #TEST2
* TOP IS NOT POSITIVE
#TOPNPOS LOAD      #DIVIS
         SKIPCOND  000
         JUMP      #DVSZERO
         LOAD      #ONE
         STORE     #TOPNEG
         LOAD      #DIVIS
         SUBT      #DIVIS
         SUBT      #DIVIS
         STORE     #DIVIS
* TEST DIVIDEND FOR NEGATIVE OR ZERO
#TEST2   LOAD      #DIVDND
         SKIPCOND  800
         JUMP      #BOTNPOS
         JUMP      #LOOP
* BOTTOM IS NOT POSITIVE
#BOTNPOS LOAD      #DIVDND
         SKIPCOND  000
         JUMP      #DVSZERO
         LOAD      #ONE
         STORE     #BOTNEG
         LOAD      #DIVDND
         SUBT      #DIVDND
         SUBT      #DIVDND
         STORE     #DIVDND
         JUMP      #LOOP
*
* DIVIDE BY ZERO OR DIVIDING ZERO
#DVSZERO CLEAR     000
         STORE     #DIVIS
         STORE     #QTNT
         JUMP      #HALT
* ITERATIVE SUBTRACTION
#LOOP    LOAD      #DIVIS
         SUBT      #DIVDND
         STORE     #DIVIS
         LOAD      #QTNT
         ADD       #ONE 
         STORE     #QTNT         
         LOAD      #DIVIS        
         SKIPCOND  800
         JUMP      #DONE
* RESULT IS STILL POSITIVE
         JUMP      #LOOP
* LOOP IS DONE, SEE IF WE WENT TOO FAR
#DONE    LOAD      #DIVIS
         SKIPCOND  000
         JUMP      #NEGATE
         ADD       #DIVDND
         STORE     #DIVIS 
         LOAD      #QTNT 
         SUBT      #ONE
         STORE     #QTNT
* NEGATE THE QUOTIENT IF NECESSARY
#NEGATE  LOAD      #TOPNEG
         ADD       #BOTNEG 
         SKIPCOND  800
         JUMP      #TESTRMN
         SUBT      #ONE
         SKIPCOND  400
         JUMP      #TESTRMN
         LOAD      #QTNT
         SUBT      #QTNT 
         SUBT      #QTNT
         STORE     #QTNT
* TEST FOR REMAINDER NEGATION
#TESTRMN LOAD      #TOPNEG
         SKIPCOND  800
         JUMP      #HALT
         LOAD      #DIVIS
         SUBT      #DIVIS
         SUBT      #DIVIS
         STORE     #DIVIS
* PROGRAM END, OUTPUT QUOTIENT AND REMAINDER
#HALT    LOAD      #QTNT
         OUTPUT    000
         LOAD      #DIVIS
         OUTPUT    000
         HALT      000
*
* PROGRAM STORAGE
*
#QTNT    !0000
#DIVIS   !0000
#DIVDND  !0000
#TOPNEG  !0000
#BOTNEG  !0000
#ONE     !0001
